//@ts-check

import callfunc from "call-func";

/**
 * @param {number|string} t
 */
var getDateObject = function getDateObject(t) {
  return null != t ? new Date(t) : new Date();
};

/**
 * @param {number|string} [t]
 */
var getTimestamp = function getTimestamp(t) {
  return +getDateObject( /** @type {number|string}*/t);
};

/**
 * milliseconds (thousandths of a second)
 * @param {number?} createTime
 * @param {number?} expireMilliseconds
 * @param {function|null} run
 * @param {function|null} expireCb
 */
var expireCallback = function expireCallback(createTime, expireMilliseconds, run, expireCb) {
  var now = getTimestamp();
  var isExpire = true;
  if (null != createTime && !isNaN(createTime)) {
    if (null == expireMilliseconds || now - createTime <= expireMilliseconds) {
      isExpire = false;
    }
  }
  return isExpire ? callfunc(expireCb) : callfunc(run);
};
var sn = {};

/**
 * @param {string} [name]
 * @param {string} [separator]
 */
var getSN = function getSN(name, separator) {
  var _sn$name;
  if (separator === void 0) {
    separator = "_";
  }
  sn[name] = (_sn$name = sn[name]) !== null && _sn$name !== void 0 ? _sn$name : 0;
  return (name || "") + separator + sn[name]++;
};
var getRandom = function getRandom() {
  return getTimestamp() + "" + Math.random();
};
export default getRandom;
export { expireCallback, getDateObject, getTimestamp, getSN };
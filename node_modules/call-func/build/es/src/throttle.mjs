import callfunc from "./callfunc.mjs";

/**
 * reduce run times.
 */
var throttle = function throttle(func, threshhold, needRunLast) {
  var _threshhold;
  threshhold = (_threshhold = threshhold) !== null && _threshhold !== void 0 ? _threshhold : 250;
  var waiting = false;
  var lastCall = false;
  var run = function run(option) {
    var {
      args,
      scope
    } = option || {};
    lastCall = false;
    callfunc(func, args, scope);
  };
  return function (option) {
    lastCall = true;
    if (!waiting) {
      waiting = true;
      run(option);
      setTimeout(function () {
        waiting = false;
        if (needRunLast && lastCall) {
          run(option);
        }
      }, threshhold);
    }
  };
};
export default throttle;